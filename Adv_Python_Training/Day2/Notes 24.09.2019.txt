##concatinating out put of two different prnt etatement
print('This is sentence 1 ',end='')
print('This is sentence 2')
# the end will concatinate the output

## concatination strings from a list
print(a[0],a[1], sep='+')
# + will act as separator

the LHS and RHS of '+' symbol always hold same data type '30' + 30 is 
not allowed, 30 + '30' is not allowed, only 30 + 30 and '30'+'30' is allowed

Dictionary
List of key value pair
Cannot hold duplicate key, if duplicate key value pair is given then that will
replace old key value pair with same key name
using dict() method we can also create a dictionary like foolowing

>>> a = dict()
>>> print(a) # prints {}

marging two dictionary and preparing a new one
>>> c={**a, **b} # considering a, b are pre defined dictionary

using get method we can solve the error of key not found, suppose a dictionary 
is declared like this a = {'name': 'angshu', 'age': 30}.
Now a['address'] will cause an error. But a.get('address', 'Not specified') 
will return 'Not specified'

using method pop we can delete an key from a dictionary.
a.pop('name') will delete the key value pair with key 'name'

result = a.pop('address', 'Not Specified') will try to delete 'address' from
dictionary but as it is not found it will return the 'Not specified' messge
instead

Types of import

1> import math # import everything inside math
2> import math as m                   # import everything
3> from math import *                 # import everything
4> from math import pi                # import pi only from math
5> from math import pi as p           # import pi only from math
6> from math import pi, sin           # import pi and sin from math
7> from math import pi as p, sin as s # import pi and sin from math